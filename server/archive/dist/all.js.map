{"version":3,"sources":["record.js","server.js","controllers/documents.js","controllers/graph.js","controllers/wit.js","utils/socket-manager.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":["var rec       = require('node-record-lpcm16'),\n    request   = require('request');\n\nvar witToken = 'VS4GQRJAHZHC2WIYMERJKGO2ONZ6VL2R'; // get one from wit.ai!\n\nexports.parseResult = function (err, resp, body) {\n  console.log(body);\n};\n\nrec.start().pipe(request.post({\n  'url'     : 'https://api.wit.ai/speech?client=chromium&lang=en-us&output=json',\n  'headers' : {\n    'Accept'        : 'application/vnd.wit.20160202+json',\n    'Authorization' : 'Bearer ' + witToken,\n    'Content-Type'  : 'audio/wav'\n  }\n}, exports.parseResult));\n","var app = require('express')();\nvar http = require('http').Server(app);\nvar io = require('socket.io')(http);\n\nimport SocketManager from 'utils/socket-manager';\n\napp.get('/', function(req, res){\n  res.sendfile('client/src/www/index.html');\n});\n\nio.on('connection', function(socket){\n  var socketManager = new SocketManager(socket)\n});\n\n\n\nhttp.listen(3000, function(){\n  console.log('listening on *:3000');\n});\n",null,null,"const rec       = require('node-record-lpcm16'),\n      request   = require('request');\n\nconst witToken = 'VS4GQRJAHZHC2WIYMERJKGO2ONZ6VL2R'; // get one from wit.ai!\nconst wit = require('node-wit');\n\nclass WitController {\n  constructor(socket){\n    this.socket = socket;\n  }\n  initializeSocket(socket){\n    var self = this;\n\n    self.socket.on('stop', function(){\n      rec.stop();\n      console.log('stopped');\n      self.socket.emit('stopped');\n    });\n\n\n    self.socket.on('record', function(){\n      self.socket.emit('recording');\n\n      rec.start().pipe(request.post({\n        'url'     : 'https://api.wit.ai/speech?client=chromium&lang=en-us&output=json',\n        'headers' : {\n          'Accept'        : 'application/vnd.wit.20160202+json',\n          'Authorization' : 'Bearer ' + witToken,\n          'Content-Type'  : 'audio/wav'\n        },\n      }, function(err,resp,body){\n        self.socket.emit('stop');\n        self.resultHandler(err,resp,body)\n      }));\n    });\n\n    self.socket.on('text', function(text){\n      console.log('recieved command: ', text);\n      wit.captureTextIntent(witToken, text, function (err, result) {\n          if (err) console.log(\"Error: \", err);\n          self.resultHandler(result);\n      });\n    });\n  }\n  resultHandler(result){\n\n  }\n\n}\n\n\n\n\nmodule.exports = WitController\n","const wit = require('../controllers/wit');\n\nclass SocketManager {\n  constructor(socket){\n    wit.initializeSocket(socket);\n  }\n}\nmodule.exports = SocketManager;\n"],"sourceRoot":"../../src"}